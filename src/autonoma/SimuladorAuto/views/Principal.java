
package autonoma.SimuladorAuto.views;

import autonoma.SimuladorAuto.exception.AccidenteException;
import autonoma.SimuladorAuto.exception.FrenadoBruscoException;
import autonoma.SimuladorAuto.exception.VehiculoApagadoException;
import autonoma.SimuladorAuto.exception.VehiculoEncendidoException;
import autonoma.SimuladorAuto.exception.VelocidadExcedidaException;
import autonoma.SimuladorAuto.models.LectorArchivoTextoPlano;
import autonoma.SimuladorAuto.models.Simulador;
import autonoma.SimuladorAuto.models.Vehiculo;
import autonoma.SimuladorAuto.sounds.ReproductorAudio;

import java.awt.Color;
import java.io.IOException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 * @author Gilary
 * @since 20250328
 * @version 1.0
 */
public class Principal extends javax.swing.JFrame {
    private Simulador simulador;
    ReproductorAudio reproducirSonido;

    /**
     * Creates new form Principal
     * @param simulador
     */
    public Principal(Simulador simulador) {
    initComponents();
        this.setLocationRelativeTo(null);
        LectorArchivoTextoPlano lector = new LectorArchivoTextoPlano();
        try {
           Vehiculo vehiculo = lector.leerConfiguracion("src/autonoma/SimuladorAuto/txt/Configuracion.txt");
            this.simulador = new Simulador(vehiculo);

        } catch (IOException | IllegalArgumentException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar configuraci√≥n: " + ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Freno = new javax.swing.JLabel();
        Acelerador = new javax.swing.JLabel();
        FrenoBrusco = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Apagar = new javax.swing.JLabel();
        Encender = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Estado = new javax.swing.JLabel();
        Velocidad = new javax.swing.JLabel();
        Cilindraje = new javax.swing.JLabel();
        Cilindraje1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(191, 198, 197));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/Carro.jpg"))); // NOI18N

        Freno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/Freno.png"))); // NOI18N
        Freno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FrenoMouseClicked(evt);
            }
        });

        Acelerador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/Acelerador.png"))); // NOI18N
        Acelerador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AceleradorMouseClicked(evt);
            }
        });

        FrenoBrusco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/f.png"))); // NOI18N
        FrenoBrusco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FrenoBruscoMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setText("Acelerador");

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel7.setText("Freno");

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel8.setText("Freno De Mano");

        Apagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/BotonApagr.png"))); // NOI18N
        Apagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApagarMouseClicked(evt);
            }
        });

        Encender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autonoma/SimuladorAuto/images/BotonEncender.png"))); // NOI18N
        Encender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EncenderMouseClicked(evt);
            }
        });

        btnCerrar.setBackground(new java.awt.Color(225, 227, 229));
        btnCerrar.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(225, 227, 229));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel5.setText("Velocidad Actual:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel9.setText("Limite de Llantas:");

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel10.setText("Velocidad Maxima del Motor:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel6.setText("Estado Vehiculo: ");

        Estado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Estado.setText("Estado");

        Velocidad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Velocidad.setText("Velocidad");

        Cilindraje.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Cilindraje.setText("Llantas");

        Cilindraje1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Cilindraje1.setText("Cilindraje");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cilindraje)
                    .addComponent(Velocidad)
                    .addComponent(Cilindraje1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Estado))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Velocidad))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Cilindraje))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Cilindraje1))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Apagar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Encender)
                                .addGap(42, 42, 42))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(FrenoBrusco)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(47, 47, 47)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(140, 140, 140)
                                        .addComponent(Freno)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Acelerador, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(btnCerrar)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Encender)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Apagar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Freno))
                            .addComponent(FrenoBrusco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Acelerador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCerrar)
                .addContainerGap(12, Short.MAX_VALUE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1096, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
     dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void EncenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EncenderMouseClicked
    try {
       simulador.encenderVehiculo();
       Estado.setText("Encendido");
       Estado.setForeground(Color.GREEN);
       Velocidad.setText(String.valueOf(simulador.getVelocidadVehiculo()) + " km/h");
       Cilindraje.setText(String.valueOf(simulador.getVehiculo().getLlantas().getLimitePatinaje()) + " km/h");
       Cilindraje1.setText(String.valueOf(simulador.getVehiculo().getMotor().getVelocidadMaxima()) + " km/h");

       // ABRIR EL JDialog CarroEncendido
       CarroEncendido dialogo = new CarroEncendido(this, true);
       ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/SonidoEncendido.wav");
       dialogo.setVisible(true);

    JOptionPane.showMessageDialog(this, "Veh√≠culo encendido.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
    }catch (VehiculoEncendidoException e) {
     JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_EncenderMouseClicked

    private void ApagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApagarMouseClicked
try {
    simulador.apagarVehiculo();

    // Reproducir sonido antes de mostrar el GIF
    ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Apagar.wav");

    // Mostrar GIF de apagado
    CarroApagado gifApagado = new CarroApagado(this, true);
    gifApagado.setVisible(true);

    Estado.setText("Apagado");
    Estado.setForeground(Color.RED);
    Velocidad.setText("0 km/h");

} catch (AccidenteException ex) {
    // Reproducir sonido antes del GIF del accidente
    ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Accidente.wav");

    // Mostrar el GIF del accidente
    AccidenteCarro gifAccidente = new AccidenteCarro(this, true);
    gifAccidente.setVisible(true);

    JOptionPane.showMessageDialog(this,
        ex.getMessage(),
        "¬°Accidente!",
        JOptionPane.ERROR_MESSAGE);

    Estado.setText("Apagado");
    Estado.setForeground(Color.RED);
    Velocidad.setText("0 km/h");

} catch (VehiculoApagadoException ex) {
    JOptionPane.showMessageDialog(this,
        ex.getMessage(),
        "Error: Veh√≠culo apagado",
        JOptionPane.WARNING_MESSAGE);
}
    }//GEN-LAST:event_ApagarMouseClicked

    private void AceleradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AceleradorMouseClicked
try {
    if (this.simulador.getVehiculo().isEncendido()) {
        String input = JOptionPane.showInputDialog(this, 
            "Por favor, ingrese la velocidad del veh√≠culo:", 
            "Entrada de Velocidad", 
            JOptionPane.QUESTION_MESSAGE);

        if (input == null || input.isBlank()) return;

        int velocidad = Integer.parseInt(input.trim());
        int velocidadMaxima = (int) simulador.getVehiculo().getMotor().getVelocidadMaxima();

        if (velocidad > velocidadMaxima) {
            throw new AccidenteException("¬°Se sobrepas√≥ la velocidad m√°xima del motor! El veh√≠culo se ha accidentado.");
        }

        simulador.acelerarVehiculo(velocidad);

        // Reproducir sonido antes de mostrar el GIF (sin hilos)
        ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Acelerar.wav");

        // Mostrar animaci√≥n de aceleraci√≥n
        AcelerarCarro gif = new AcelerarCarro(this, true);
        gif.setVisible(true);

        Velocidad.setText(simulador.getVelocidadVehiculo() + " km/h");
        Estado.setText("Encendido");
        Estado.setForeground(Color.GREEN);
        Cilindraje.setText(simulador.getVehiculo().getLlantas().getLimitePatinaje() + " km/h");
        Cilindraje1.setText(velocidadMaxima + " km/h");

        JOptionPane.showMessageDialog(this, 
            "Veh√≠culo acelerado. Velocidad actual: " + simulador.getVelocidadVehiculo() + " km/h.", 
            "Velocidad actual", 
            JOptionPane.INFORMATION_MESSAGE);

    } else {
        int velocidadActual = (int) simulador.getVelocidadVehiculo();

        if (velocidadActual >= 60) {
            throw new AccidenteException("¬°Se apag√≥ el veh√≠culo a alta velocidad! El conductor ha tenido un accidente.");
        }

        simulador.acelerarVehiculo(0);
    }

} catch (VelocidadExcedidaException e) {
    JOptionPane.showMessageDialog(this, e.getMessage(), 
        "Advertencia: Velocidad excedida", 
        JOptionPane.WARNING_MESSAGE);

} catch (VehiculoApagadoException ex) {
    JOptionPane.showMessageDialog(this, ex.getMessage(), 
        "Error: Veh√≠culo apagado", 
        JOptionPane.ERROR_MESSAGE);

} catch (AccidenteException ae) {
    String mensaje = ae.getMessage();

    // Reproducir sonido antes de mostrar el GIF
    ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Accidente.wav");

    // Mostrar animaci√≥n del accidente
    AccidenteCarro gifAccidente = new AccidenteCarro(this, true);
    gifAccidente.setVisible(true);

    JOptionPane.showMessageDialog(this, mensaje, 
        "¬°Accidente!", 
        JOptionPane.ERROR_MESSAGE);

    Estado.setText("Apagado");
    Estado.setForeground(Color.RED);
    Velocidad.setText("0 km/h");

} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, 
        "Por favor, ingrese un n√∫mero v√°lido.", 
        "Entrada inv√°lida", 
        JOptionPane.WARNING_MESSAGE);
}

    }//GEN-LAST:event_AceleradorMouseClicked

    private void FrenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrenoMouseClicked
try {
    if (this.simulador.getVehiculo().isEncendido()) {
        String input = JOptionPane.showInputDialog(this, 
            "Por favor, ingrese la velocidad del veh√≠culo:", 
            "Entrada de Velocidad", 
            JOptionPane.QUESTION_MESSAGE);

        if (input == null || input.isBlank()) return;

        int velocidad = Integer.parseInt(input.trim());
        int velocidadMaxima = (int) simulador.getVehiculo().getMotor().getVelocidadMaxima();

        if (velocidad > velocidadMaxima) {
            throw new AccidenteException("¬°Se sobrepas√≥ la velocidad m√°xima del motor! El veh√≠culo se ha accidentado.");
        }

        simulador.acelerarVehiculo(velocidad);

        // Mostrar gif y sonido en paralelo usando JDialog no modal
        JDialog gifDialog = new AcelerarCarro(this, false); // ¬°no modal!
        gifDialog.setVisible(true); // no bloquea
        gifDialog.setLocationRelativeTo(this);

        // Reproducir el sonido
        new Thread(() -> {
            ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Acelerar.wav");
        }).start();

        // Cerrar el gif autom√°ticamente despu√©s de X segundos (por ejemplo, 3)
        new Timer(3000, e -> gifDialog.dispose()).start();

        // Actualizar interfaz
        Velocidad.setText(simulador.getVelocidadVehiculo() + " km/h");
        Estado.setText("Encendido");
        Estado.setForeground(Color.GREEN);
        Cilindraje.setText(simulador.getVehiculo().getLlantas().getLimitePatinaje() + " km/h");
        Cilindraje1.setText(velocidadMaxima + " km/h");

        JOptionPane.showMessageDialog(this, 
            "Veh√≠culo acelerado. Velocidad actual: " + simulador.getVelocidadVehiculo() + " km/h.", 
            "Velocidad actual", 
            JOptionPane.INFORMATION_MESSAGE);

    } else {
        int velocidadActual = (int) simulador.getVelocidadVehiculo();

        if (velocidadActual >= 60) {
            throw new AccidenteException("¬°Se apag√≥ el veh√≠culo a alta velocidad! El conductor ha tenido un accidente.");
        }

        simulador.acelerarVehiculo(0);
    }

} catch (VelocidadExcedidaException e) {
    JOptionPane.showMessageDialog(this, e.getMessage(), 
        "Advertencia: Velocidad excedida", 
        JOptionPane.WARNING_MESSAGE);

} catch (VehiculoApagadoException ex) {
    JOptionPane.showMessageDialog(this, ex.getMessage(), 
        "Error: Veh√≠culo apagado", 
        JOptionPane.ERROR_MESSAGE);

} catch (AccidenteException ae) {
    String mensaje = ae.getMessage();

    // Mostrar gif del accidente (no modal)
    JDialog gifAccidente = new AccidenteCarro(this, false); // no modal
    gifAccidente.setVisible(true);
    gifAccidente.setLocationRelativeTo(this);

    // Sonido en paralelo
}
    }//GEN-LAST:event_FrenoMouseClicked

    private void FrenoBruscoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrenoBruscoMouseClicked
try {
    // Guardar velocidad antes de frenar
    int velocidadAntes = (int) simulador.getVelocidadVehiculo();

    // Frenar el veh√≠culo
    simulador.frenarBruscamenteVehiculo();

    // Actualizar interfaz
    Velocidad.setText(simulador.getVelocidadVehiculo() + " km/h");
    Estado.setText("Encendido");
    Estado.setForeground(Color.GREEN);
    Cilindraje.setText(simulador.getVehiculo().getLlantas().getLimitePatinaje() + " km/h");
    Cilindraje1.setText(simulador.getVehiculo().getMotor().getVelocidadMaxima() + " km/h");

    // Verificar si hab√≠a velocidad antes de frenar
    if (velocidadAntes > 0) {
        FrenadoBrusco freno = new FrenadoBrusco(this, true);
        ReproductorAudio.ReproductorAudio("src/autonoma/SimuladorAuto/sounds/Derrape.wav");
        freno.setVisible(true);

        JOptionPane.showMessageDialog(this, "¬°El veh√≠culo fren√≥ bruscamente y patin√≥!", "Aviso de Patinaje", JOptionPane.WARNING_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "El veh√≠culo ya estaba detenido. Solo se ha aplicado el frenado normal.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }

    } catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor num√©rico v√°lido.", "Error de entrada", JOptionPane.ERROR_MESSAGE);
    } catch (VehiculoApagadoException e) {
    JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } catch (FrenadoBruscoException e) {
    JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

     
    }//GEN-LAST:event_FrenoBruscoMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Acelerador;
    private javax.swing.JLabel Apagar;
    private javax.swing.JLabel Cilindraje;
    private javax.swing.JLabel Cilindraje1;
    private javax.swing.JLabel Encender;
    private javax.swing.JLabel Estado;
    private javax.swing.JLabel Freno;
    private javax.swing.JLabel FrenoBrusco;
    private javax.swing.JLabel Velocidad;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
